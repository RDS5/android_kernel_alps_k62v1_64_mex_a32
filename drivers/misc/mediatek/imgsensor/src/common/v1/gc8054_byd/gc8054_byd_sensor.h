/*
 *  Copyright (C) 2019-2019 Huawei Technologies Co., Ltd.
 *
 * gc8054 byd driver.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef _GC8054_BYD_SENSOR_H
#define _GC8054_BYD_SENSOR_H

#include "imgsensor_sensor_common.h"
#include "kd_imgsensor.h"

#define SHUTER_REG 0x0202
#define GAIN_REG 0x0204
#define FRAME_LENGTH_REG 0x0340
#define SENSOR_BASE_GAIN 0x0400
#define SENSOR_MAX_GAIN (16 * SENSOR_BASE_GAIN)

/* SENSOR MIRROR FLIP INFO */
#define GC8054_MIRROR_FLIP_ENABLE	0
#if GC8054_MIRROR_FLIP_ENABLE
#define GC8054_MIRROR	0x03
#else
#define GC8054_MIRROR	0x00
#endif

int d_gain_ratio = 1024;

static struct imgsensor_i2c_reg stream_on[] = {
	{ 0x0102, 0x09, 0x00 },
};

static struct imgsensor_i2c_reg stream_off[] = {
	{ 0x0102, 0x00, 0x00 },
};

static struct imgsensor_i2c_reg init_setting[] = {
	{ 0x031c, 0x60, 0x00 },
	{ 0x0320, 0xbb, 0x00 },
	{ 0x0337, 0x05, 0x00 },
	{ 0x0335, 0x51, 0x00 },
	{ 0x0336, 0x8a, 0x00 },
	{ 0x031a, 0x00, 0x00 },
	{ 0x0321, 0x10, 0x00 },
	{ 0x0327, 0x05, 0x00 },
	{ 0x0325, 0x41, 0x00 },
	{ 0x0326, 0x54, 0x00 },
	{ 0x0314, 0x01, 0x00 },
	{ 0x0315, 0xe9, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0115, 0x10, 0x00 },
	{ 0x0180, 0x65, 0x00 },
	{ 0x0334, 0xc0, 0x00 },
	{ 0x0324, 0x44, 0x00 },
	{ 0x031c, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x0288, 0x03, 0x00 },
	{ 0x0084, 0x30, 0x00 },
	{ 0x0265, 0x00, 0x00 },
	{ 0x04e0, 0x01, 0x00 },
	{ 0x0100, 0x01, 0x00 },
	{ 0x0101, GC8054_MIRROR, 0x00 },
	{ 0x0342, 0x05, 0x00 },
	{ 0x0343, 0x20, 0x00 },
	{ 0x0344, 0x00, 0x00 },
	{ 0x0345, 0x06, 0x00 },
	{ 0x0346, 0x00, 0x00 },
	{ 0x0347, 0x04, 0x00 },
	{ 0x0348, 0x0c, 0x00 },
	{ 0x0349, 0xd0, 0x00 },
	{ 0x034a, 0x09, 0x00 },
	{ 0x034b, 0x9c, 0x00 },
	{ 0x0257, 0x06, 0x00 },
	{ 0x0290, 0x00, 0x00 },
	{ 0x0291, 0x00, 0x00 },
	{ 0x0292, 0x28, 0x00 },
	{ 0x0295, 0x10, 0x00 },
	{ 0x0213, 0x12, 0x00 },
	{ 0x02a9, 0x18, 0x00 },
	{ 0x0221, 0x22, 0x00 },
	{ 0x028b, 0x18, 0x00 },
	{ 0x028c, 0x18, 0x00 },
	{ 0x0229, 0x64, 0x00 },
	{ 0x024b, 0x16, 0x00 },
	{ 0x0255, 0x21, 0x00 },
	{ 0x0280, 0x38, 0x00 },
	{ 0x0500, 0x18, 0x00 },
	{ 0x0501, 0xd0, 0x00 },
	{ 0x0502, 0x15, 0x00 },
	{ 0x0211, 0x02, 0x00 },
	{ 0x0216, 0x06, 0x00 },
	{ 0x0219, 0x08, 0x00 },
	{ 0x021a, 0x04, 0x00 },
	{ 0x021f, 0x10, 0x00 },
	{ 0x0224, 0x00, 0x00 },
	{ 0x0234, 0x00, 0x00 },
	{ 0x0220, 0x15, 0x00 },
	{ 0x024a, 0x02, 0x00 },
	{ 0x0281, 0x30, 0x00 },
	{ 0x0282, 0x13, 0x00 },
	{ 0x028d, 0x92, 0x00 },
	{ 0x028f, 0x01, 0x00 },
	{ 0x0390, 0x6f, 0x00 },
	{ 0x0392, 0x5c, 0x00 },
	{ 0x0394, 0x20, 0x00 },
	{ 0x039a, 0x90, 0x00 },
	{ 0x0506, 0x19, 0x00 },
	{ 0x0514, 0x00, 0x00 },
	{ 0x0515, 0x1c, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x0360, 0x01, 0x00 },
	{ 0x0360, 0x00, 0x00 },
	{ 0x0317, 0x08, 0x00 },
	{ 0x0a67, 0x80, 0x00 },
	{ 0x0313, 0x00, 0x00 },
	{ 0x0a54, 0x04, 0x00 },
	{ 0x0a65, 0x05, 0x00 },
	{ 0x0a68, 0x11, 0x00 },
	{ 0x0a59, 0x00, 0x00 },
	{ 0x00be, 0x00, 0x00 },
	{ 0x00a9, 0x01, 0x00 },
	{ 0x00d7, 0xd0, 0x00 },
	{ 0x00d8, 0x0c, 0x00 },
	{ 0x009c, 0x09, 0x00 },
	{ 0x009d, 0x9c, 0x00 },
	{ 0x009e, 0x0c, 0x00 },
	{ 0x009f, 0xd0, 0x00 },
	{ 0x0a82, 0x00, 0x00 },
	{ 0x0a83, 0x88, 0x00 },
	{ 0x0a84, 0x10, 0x00 },
	{ 0x0a85, 0x10, 0x00 },
	{ 0x0a88, 0x0a, 0x00 },
	{ 0x0a89, 0x0d, 0x00 },
	{ 0x0a8a, 0x20, 0x00 },
	{ 0x0a71, 0x52, 0x00 },
	{ 0x0a72, 0x12, 0x00 },
	{ 0x0a73, 0x60, 0x00 },
	{ 0x0a75, 0x41, 0x00 },
	{ 0x0a70, 0x07, 0x00 },
	{ 0x0313, 0x80, 0x00 },
	{ 0x0080, 0xd0, 0x00 },
	{ 0x0087, 0x51, 0x00 },
	{ 0x0089, 0x03, 0x00 },
	{ 0x0096, 0x82, 0x00 },
	{ 0x0040, 0x22, 0x00 },
	{ 0x0041, 0x20, 0x00 },
	{ 0x0043, 0x05, 0x00 },
	{ 0x0044, 0x00, 0x00 },
	{ 0x0046, 0x08, 0x00 },
	{ 0x0048, 0x01, 0x00 },
	{ 0x0049, 0xf0, 0x00 },
	{ 0x004a, 0x0f, 0x00 },
	{ 0x004c, 0x0f, 0x00 },
	{ 0x004d, 0x00, 0x00 },
	{ 0x0414, 0x80, 0x00 },
	{ 0x0415, 0x80, 0x00 },
	{ 0x0416, 0x80, 0x00 },
	{ 0x0417, 0x80, 0x00 },
	{ 0x009a, 0x40, 0x00 },
	{ 0x00c0, 0x80, 0x00 },
	{ 0x00c1, 0x80, 0x00 },
	{ 0x00c2, 0x02, 0x00 },
	{ 0x0470, 0x04, 0x00 },
	{ 0x0471, 0x1c, 0x00 },
	{ 0x0472, 0x14, 0x00 },
	{ 0x0473, 0x12, 0x00 },
	{ 0x0474, 0x1a, 0x00 },
	{ 0x0475, 0x1a, 0x00 },
	{ 0x0476, 0x18, 0x00 },
	{ 0x0477, 0x16, 0x00 },
	{ 0x0480, 0x03, 0x00 },
	{ 0x0481, 0x03, 0x00 },
	{ 0x0482, 0x03, 0x00 },
	{ 0x0483, 0x03, 0x00 },
	{ 0x0484, 0x04, 0x00 },
	{ 0x0485, 0x04, 0x00 },
	{ 0x0486, 0x04, 0x00 },
	{ 0x0487, 0x04, 0x00 },
	{ 0x0478, 0x04, 0x00 },
	{ 0x0479, 0x10, 0x00 },
	{ 0x047a, 0x26, 0x00 },
	{ 0x047b, 0x38, 0x00 },
	{ 0x047c, 0x10, 0x00 },
	{ 0x047d, 0x20, 0x00 },
	{ 0x047e, 0x30, 0x00 },
	{ 0x047f, 0x60, 0x00 },
	{ 0x0488, 0x04, 0x00 },
	{ 0x0489, 0x04, 0x00 },
	{ 0x048a, 0x04, 0x00 },
	{ 0x048b, 0x04, 0x00 },
	{ 0x048c, 0x03, 0x00 },
	{ 0x048d, 0x03, 0x00 },
	{ 0x048e, 0x03, 0x00 },
	{ 0x048f, 0x03, 0x00 },
};

static struct imgsensor_i2c_reg preview_setting[] = {
	{ 0x031c, 0x60, 0x00 },
	{ 0x0320, 0xbb, 0x00 },
	{ 0x0337, 0x05, 0x00 },
	{ 0x0335, 0x59, 0x00 },
	{ 0x0336, 0x92, 0x00 },
	{ 0x031a, 0x01, 0x00 },
	{ 0x0321, 0x10, 0x00 },
	{ 0x0327, 0x05, 0x00 },
	{ 0x0325, 0x43, 0x00 },
	{ 0x0326, 0x54, 0x00 },
	{ 0x0314, 0x01, 0x00 },
	{ 0x0315, 0xe4, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0115, 0x10, 0x00 },
	{ 0x0180, 0x65, 0x00 },
	{ 0x0334, 0xc0, 0x00 },
	{ 0x0324, 0x44, 0x00 },
	{ 0x031c, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x0202, 0x04, 0x00 },
	{ 0x0203, 0x80, 0x00 },
	{ 0x0340, 0x04, 0x00 },
	{ 0x0341, 0xf2, 0x00 },
	{ 0x0342, 0x05, 0x00 },
	{ 0x0343, 0x20, 0x00 },
	{ 0x0344, 0x00, 0x00 },
	{ 0x0345, 0x06, 0x00 },
	{ 0x0346, 0x00, 0x00 },
	{ 0x0347, 0x04, 0x00 },
	{ 0x0348, 0x0c, 0x00 },
	{ 0x0349, 0xd0, 0x00 },
	{ 0x034a, 0x09, 0x00 },
	{ 0x034b, 0x9c, 0x00 },
	{ 0x0291, 0x00, 0x00 },
	{ 0x0292, 0x28, 0x00 },
	{ 0x0213, 0x14, 0x00 },
	{ 0x02a9, 0x18, 0x00 },
	{ 0x0221, 0x22, 0x00 },
	{ 0x028b, 0x18, 0x00 },
	{ 0x028c, 0x18, 0x00 },
	{ 0x0229, 0x64, 0x00 },
	{ 0x024b, 0x16, 0x00 },
	{ 0x0255, 0x21, 0x00 },
	{ 0x0280, 0x38, 0x00 },
	{ 0x021f, 0x18, 0x00 },
	{ 0x0224, 0x41, 0x00 },
	{ 0x0234, 0x20, 0x00 },
	{ 0x024a, 0x04, 0x00 },
	{ 0x0282, 0x10, 0x00 },
	{ 0x028d, 0x93, 0x00 },
	{ 0x039a, 0xc0, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x00d3, 0x00, 0x00 },
	{ 0x00d4, 0x00, 0x00 },
	{ 0x00d5, 0x00, 0x00 },
	{ 0x00d6, 0x00, 0x00 },
	{ 0x05a0, 0x83, 0x00 },
	{ 0x05a3, 0x06, 0x00 },
	{ 0x05a4, 0x04, 0x00 },
	{ 0x0597, 0x27, 0x00 },
	{ 0x059a, 0x00, 0x00 },
	{ 0x059b, 0x00, 0x00 },
	{ 0x059c, 0x01, 0x00 },
	{ 0x05ab, 0x09, 0x00 },
	{ 0x05ae, 0x00, 0x00 },
	{ 0x05af, 0x00, 0x00 },
	{ 0x05ac, 0x00, 0x00 },
	{ 0x05ad, 0x01, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x1c, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x12, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x06, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x14, 0x00 },
	{ 0x05b1, 0x1c, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x19, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x68, 0x00 },
	{ 0x05b1, 0x41, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x88, 0x00 },
	{ 0x05b1, 0x51, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x94, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0xd9, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0xf8, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x9e, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x07, 0x00 },
	{ 0x05b1, 0xf0, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x0b, 0x00 },
	{ 0x05b1, 0x3d, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0d, 0x00 },
	{ 0x05b1, 0x0f, 0x00 },
	{ 0x05b1, 0xc6, 0x00 },
	{ 0x05b1, 0x09, 0x00 },
	{ 0x05b1, 0x6d, 0x00 },
	{ 0x05ac, 0x01, 0x00 },
	{ 0x029f, 0xc4, 0x00 },
	{ 0x05a0, 0xc3, 0x00 },
	{ 0x02b0, 0x70, 0x00 },
	{ 0x0206, 0xc0, 0x00 },
	{ 0x02b3, 0x00, 0x00 },
	{ 0x02b4, 0x00, 0x00 },
	{ 0x0204, 0x04, 0x00 },
	{ 0x0205, 0x00, 0x00 },
	{ 0x0099, 0x00, 0x00 },
	{ 0x0351, 0x00, 0x00 },
	{ 0x0352, 0x04, 0x00 },
	{ 0x0353, 0x00, 0x00 },
	{ 0x0354, 0x04, 0x00 },
	{ 0x034c, 0x06, 0x00 },
	{ 0x034d, 0x60, 0x00 },
	{ 0x034e, 0x04, 0x00 },
	{ 0x034f, 0xc8, 0x00 },
	{ 0x0108, 0x08, 0x00 },
	{ 0x0112, 0x0a, 0x00 },
	{ 0x0113, 0x0a, 0x00 },
	{ 0x0114, 0x01, 0x00 },
	{ 0x0181, 0x30, 0x00 },
	{ 0x0185, 0x01, 0x00 },
	{ 0x0188, 0x00, 0x00 },
	{ 0x0121, 0x02, 0x00 },
	{ 0x0122, 0x03, 0x00 },
	{ 0x0123, 0x09, 0x00 },
	{ 0x0124, 0x00, 0x00 },
	{ 0x0125, 0x08, 0x00 },
	{ 0x0126, 0x05, 0x00 },
	{ 0x0129, 0x03, 0x00 },
	{ 0x012a, 0x03, 0x00 },
	{ 0x012b, 0x05, 0x00 },
	{ 0x0a70, 0x11, 0x00 },
	{ 0x0313, 0x80, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0a70, 0x00, 0x00 },
	{ 0x00be, 0x01, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0a67, 0x00, 0x00 },
	{ 0x0084, 0x10, 0x00 },
};

static struct imgsensor_i2c_reg capture_setting[] = {
	{ 0x031c, 0x60, 0x00 },
	{ 0x0320, 0xbb, 0x00 },
	{ 0x0337, 0x05, 0x00 },
	{ 0x0335, 0x51, 0x00 },
	{ 0x0336, 0x8a, 0x00 },
	{ 0x031a, 0x00, 0x00 },
	{ 0x0321, 0x10, 0x00 },
	{ 0x0327, 0x05, 0x00 },
	{ 0x0325, 0x41, 0x00 },
	{ 0x0326, 0x54, 0x00 },
	{ 0x0314, 0x01, 0x00 },
	{ 0x0315, 0xe9, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0115, 0x10, 0x00 },
	{ 0x0180, 0x65, 0x00 },
	{ 0x0334, 0xc0, 0x00 },
	{ 0x0324, 0x44, 0x00 },
	{ 0x031c, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x0202, 0x09, 0x00 },
	{ 0x0203, 0x00, 0x00 }, // Exp
	{ 0x0340, 0x09, 0x00 },
	{ 0x0341, 0xe4, 0x00 }, // FL
	{ 0x0342, 0x05, 0x00 },
	{ 0x0343, 0x20, 0x00 },
	{ 0x0344, 0x00, 0x00 },
	{ 0x0345, 0x06, 0x00 },
	{ 0x0346, 0x00, 0x00 },
	{ 0x0347, 0x04, 0x00 },
	{ 0x0348, 0x0c, 0x00 },
	{ 0x0349, 0xd0, 0x00 },
	{ 0x034a, 0x09, 0x00 },
	{ 0x034b, 0x9c, 0x00 },
	{ 0x0291, 0x00, 0x00 },
	{ 0x0292, 0x28, 0x00 },
	{ 0x0213, 0x12, 0x00 },
	{ 0x02a9, 0x18, 0x00 },
	{ 0x0221, 0x22, 0x00 },
	{ 0x028b, 0x18, 0x00 },
	{ 0x028c, 0x18, 0x00 },
	{ 0x0229, 0x64, 0x00 },
	{ 0x024b, 0x16, 0x00 },
	{ 0x0255, 0x21, 0x00 },
	{ 0x0280, 0x38, 0x00 },
	{ 0x021f, 0x10, 0x00 },
	{ 0x0224, 0x00, 0x00 },
	{ 0x0234, 0x00, 0x00 },
	{ 0x024a, 0x02, 0x00 },
	{ 0x0282, 0x13, 0x00 },
	{ 0x028d, 0x92, 0x00 },
	{ 0x039a, 0x90, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x00d3, 0x00, 0x00 },
	{ 0x00d4, 0x00, 0x00 },
	{ 0x00d5, 0x00, 0x00 },
	{ 0x00d6, 0x00, 0x00 },
	{ 0x05a0, 0x83, 0x00 },
	{ 0x05a3, 0x06, 0x00 },
	{ 0x05a4, 0x04, 0x00 },
	{ 0x0597, 0x27, 0x00 },
	{ 0x059a, 0x00, 0x00 },
	{ 0x059b, 0x00, 0x00 },
	{ 0x059c, 0x01, 0x00 },
	{ 0x05ab, 0x09, 0x00 },
	{ 0x05ae, 0x00, 0x00 },
	{ 0x05af, 0x00, 0x00 },
	{ 0x05ac, 0x00, 0x00 },
	{ 0x05ad, 0x01, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x1c, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x12, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x06, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x14, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x19, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x14, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x68, 0x00 },
	{ 0x05b1, 0x41, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x88, 0x00 },
	{ 0x05b1, 0x51, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x94, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0xd9, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0xf8, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x9e, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x07, 0x00 },
	{ 0x05b1, 0xf0, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x0b, 0x00 },
	{ 0x05b1, 0x3d, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0d, 0x00 },
	{ 0x05b1, 0x0f, 0x00 },
	{ 0x05b1, 0xc6, 0x00 },
	{ 0x05b1, 0x09, 0x00 },
	{ 0x05b1, 0x6d, 0x00 },
	{ 0x05ac, 0x01, 0x00 },
	{ 0x029f, 0xc4, 0x00 },
	{ 0x05a0, 0xc3, 0x00 },
	{ 0x02b0, 0x70, 0x00 },
	{ 0x0206, 0xc0, 0x00 },
	{ 0x02b3, 0x00, 0x00 },
	{ 0x02b4, 0x00, 0x00 },
	{ 0x0204, 0x04, 0x00 },
	{ 0x0205, 0x00, 0x00 },
	{ 0x0099, 0x00, 0x00 },
	{ 0x0351, 0x00, 0x00 },
	{ 0x0352, 0x06, 0x00 },
	{ 0x0353, 0x00, 0x00 },
	{ 0x0354, 0x08, 0x00 },
	{ 0x034c, 0x0c, 0x00 },
	{ 0x034d, 0xc0, 0x00 },
	{ 0x034e, 0x09, 0x00 },
	{ 0x034f, 0x90, 0x00 },
	{ 0x0108, 0x08, 0x00 },
	{ 0x0112, 0x0a, 0x00 },
	{ 0x0113, 0x0a, 0x00 },
	{ 0x0114, 0x01, 0x00 },
	{ 0x0181, 0x30, 0x00 },
	{ 0x0185, 0x01, 0x00 },
	{ 0x0188, 0x00, 0x00 },
	{ 0x0121, 0x0b, 0x00 },
	{ 0x0122, 0x0d, 0x00 },
	{ 0x0123, 0x2f, 0x00 },
	{ 0x0124, 0x01, 0x00 },
	{ 0x0125, 0x12, 0x00 },
	{ 0x0126, 0x0f, 0x00 },
	{ 0x0129, 0x0c, 0x00 },
	{ 0x012a, 0x13, 0x00 },
	{ 0x012b, 0x0f, 0x00 },
	{ 0x0a70, 0x11, 0x00 },
	{ 0x0313, 0x80, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0a70, 0x00, 0x00 },
	{ 0x00be, 0x01, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0a67, 0x00, 0x00 },
	{ 0x0084, 0x10, 0x00 },
};

static struct imgsensor_i2c_reg video_setting[] = {
	{ 0x031c, 0x60, 0x00 },
	{ 0x0320, 0xbb, 0x00 },
	{ 0x0337, 0x05, 0x00 },
	{ 0x0335, 0x51, 0x00 },
	{ 0x0336, 0x8a, 0x00 },
	{ 0x031a, 0x00, 0x00 },
	{ 0x0321, 0x10, 0x00 },
	{ 0x0327, 0x05, 0x00 },
	{ 0x0325, 0x41, 0x00 },
	{ 0x0326, 0x54, 0x00 },
	{ 0x0314, 0x01, 0x00 },
	{ 0x0315, 0xe9, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0115, 0x10, 0x00 },
	{ 0x0180, 0x65, 0x00 },
	{ 0x0334, 0xc0, 0x00 },
	{ 0x0324, 0x44, 0x00 },
	{ 0x031c, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x0202, 0x09, 0x00 },
	{ 0x0203, 0x00, 0x00 }, // Exp
	{ 0x0340, 0x09, 0x00 },
	{ 0x0341, 0xe4, 0x00 }, // FL
	{ 0x0342, 0x05, 0x00 },
	{ 0x0343, 0x20, 0x00 },
	{ 0x0344, 0x00, 0x00 },
	{ 0x0345, 0x06, 0x00 },
	{ 0x0346, 0x00, 0x00 },
	{ 0x0347, 0x04, 0x00 },
	{ 0x0348, 0x0c, 0x00 },
	{ 0x0349, 0xd0, 0x00 },
	{ 0x034a, 0x09, 0x00 },
	{ 0x034b, 0x9c, 0x00 },
	{ 0x0291, 0x00, 0x00 },
	{ 0x0292, 0x28, 0x00 },
	{ 0x0213, 0x12, 0x00 },
	{ 0x02a9, 0x18, 0x00 },
	{ 0x0221, 0x22, 0x00 },
	{ 0x028b, 0x18, 0x00 },
	{ 0x028c, 0x18, 0x00 },
	{ 0x0229, 0x64, 0x00 },
	{ 0x024b, 0x16, 0x00 },
	{ 0x0255, 0x21, 0x00 },
	{ 0x0280, 0x38, 0x00 },
	{ 0x021f, 0x10, 0x00 },
	{ 0x0224, 0x00, 0x00 },
	{ 0x0234, 0x00, 0x00 },
	{ 0x024a, 0x02, 0x00 },
	{ 0x0282, 0x13, 0x00 },
	{ 0x028d, 0x92, 0x00 },
	{ 0x039a, 0x90, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x00d3, 0x00, 0x00 },
	{ 0x00d4, 0x00, 0x00 },
	{ 0x00d5, 0x00, 0x00 },
	{ 0x00d6, 0x00, 0x00 },
	{ 0x05a0, 0x83, 0x00 },
	{ 0x05a3, 0x06, 0x00 },
	{ 0x05a4, 0x04, 0x00 },
	{ 0x0597, 0x27, 0x00 },
	{ 0x059a, 0x00, 0x00 },
	{ 0x059b, 0x00, 0x00 },
	{ 0x059c, 0x01, 0x00 },
	{ 0x05ab, 0x09, 0x00 },
	{ 0x05ae, 0x00, 0x00 },
	{ 0x05af, 0x00, 0x00 },
	{ 0x05ac, 0x00, 0x00 },
	{ 0x05ad, 0x01, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x1c, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x12, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x06, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x14, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x19, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x14, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x68, 0x00 },
	{ 0x05b1, 0x41, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x88, 0x00 },
	{ 0x05b1, 0x51, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x94, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0xd9, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0xf8, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x9e, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x07, 0x00 },
	{ 0x05b1, 0xf0, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x0b, 0x00 },
	{ 0x05b1, 0x3d, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0d, 0x00 },
	{ 0x05b1, 0x0f, 0x00 },
	{ 0x05b1, 0xc6, 0x00 },
	{ 0x05b1, 0x09, 0x00 },
	{ 0x05b1, 0x6d, 0x00 },
	{ 0x05ac, 0x01, 0x00 },
	{ 0x029f, 0xc4, 0x00 },
	{ 0x05a0, 0xc3, 0x00 },
	{ 0x02b0, 0x70, 0x00 },
	{ 0x0206, 0xc0, 0x00 },
	{ 0x02b3, 0x00, 0x00 },
	{ 0x02b4, 0x00, 0x00 },
	{ 0x0204, 0x04, 0x00 },
	{ 0x0205, 0x00, 0x00 },
	{ 0x0099, 0x00, 0x00 },
	{ 0x0351, 0x00, 0x00 },
	{ 0x0352, 0x06, 0x00 },
	{ 0x0353, 0x00, 0x00 },
	{ 0x0354, 0x08, 0x00 },
	{ 0x034c, 0x0c, 0x00 },
	{ 0x034d, 0xc0, 0x00 },
	{ 0x034e, 0x09, 0x00 },
	{ 0x034f, 0x90, 0x00 },
	{ 0x0108, 0x08, 0x00 },
	{ 0x0112, 0x0a, 0x00 },
	{ 0x0113, 0x0a, 0x00 },
	{ 0x0114, 0x01, 0x00 },
	{ 0x0181, 0x30, 0x00 },
	{ 0x0185, 0x01, 0x00 },
	{ 0x0188, 0x00, 0x00 },
	{ 0x0121, 0x0b, 0x00 },
	{ 0x0122, 0x0d, 0x00 },
	{ 0x0123, 0x2f, 0x00 },
	{ 0x0124, 0x01, 0x00 },
	{ 0x0125, 0x12, 0x00 },
	{ 0x0126, 0x0f, 0x00 },
	{ 0x0129, 0x0c, 0x00 },
	{ 0x012a, 0x13, 0x00 },
	{ 0x012b, 0x0f, 0x00 },
	{ 0x0a70, 0x11, 0x00 },
	{ 0x0313, 0x80, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0a70, 0x00, 0x00 },
	{ 0x00be, 0x01, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0a67, 0x00, 0x00 },
	{ 0x0084, 0x10, 0x00 },
};

/* custom2 face_unlock */
static struct imgsensor_i2c_reg cust2_setting[] = {
	{ 0x031c, 0x60, 0x00 },
	{ 0x0320, 0xbb, 0x00 },
	{ 0x0337, 0x05, 0x00 },
	{ 0x0335, 0x51, 0x00 },
	{ 0x0336, 0x8a, 0x00 },
	{ 0x031a, 0x00, 0x00 },
	{ 0x0321, 0x10, 0x00 },
	{ 0x0327, 0x05, 0x00 },
	{ 0x0325, 0x41, 0x00 },
	{ 0x0326, 0x54, 0x00 },
	{ 0x0314, 0x01, 0x00 },
	{ 0x0315, 0xe9, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0115, 0x10, 0x00 },
	{ 0x0180, 0x65, 0x00 },
	{ 0x0334, 0xc0, 0x00 },
	{ 0x0324, 0x44, 0x00 },
	{ 0x031c, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x0202, 0x09, 0x00 },
	{ 0x0203, 0x00, 0x00 }, // Exp
	{ 0x0340, 0x09, 0x00 },
	{ 0x0341, 0xe4, 0x00 }, // FL
	{ 0x0342, 0x05, 0x00 },
	{ 0x0343, 0x20, 0x00 },
	{ 0x0344, 0x00, 0x00 },
	{ 0x0345, 0x06, 0x00 },
	{ 0x0346, 0x00, 0x00 },
	{ 0x0347, 0x04, 0x00 },
	{ 0x0348, 0x0c, 0x00 },
	{ 0x0349, 0xd0, 0x00 },
	{ 0x034a, 0x09, 0x00 },
	{ 0x034b, 0x9c, 0x00 },
	{ 0x0291, 0x00, 0x00 },
	{ 0x0292, 0x28, 0x00 },
	{ 0x0213, 0x12, 0x00 },
	{ 0x02a9, 0x18, 0x00 },
	{ 0x0221, 0x22, 0x00 },
	{ 0x028b, 0x18, 0x00 },
	{ 0x028c, 0x18, 0x00 },
	{ 0x0229, 0x64, 0x00 },
	{ 0x024b, 0x16, 0x00 },
	{ 0x0255, 0x21, 0x00 },
	{ 0x0280, 0x38, 0x00 },
	{ 0x021f, 0x10, 0x00 },
	{ 0x0224, 0x00, 0x00 },
	{ 0x0234, 0x00, 0x00 },
	{ 0x024a, 0x02, 0x00 },
	{ 0x0282, 0x13, 0x00 },
	{ 0x028d, 0x92, 0x00 },
	{ 0x039a, 0x90, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x80, 0x00 },
	{ 0x03fe, 0x10, 0x00 },
	{ 0x03fe, 0x00, 0x00 },
	{ 0x031c, 0x9f, 0x00 },
	{ 0x00d3, 0x00, 0x00 },
	{ 0x00d4, 0x00, 0x00 },
	{ 0x00d5, 0x00, 0x00 },
	{ 0x00d6, 0x00, 0x00 },
	{ 0x05a0, 0x83, 0x00 },
	{ 0x05a3, 0x06, 0x00 },
	{ 0x05a4, 0x04, 0x00 },
	{ 0x0597, 0x27, 0x00 },
	{ 0x059a, 0x00, 0x00 },
	{ 0x059b, 0x00, 0x00 },
	{ 0x059c, 0x01, 0x00 },
	{ 0x05ab, 0x09, 0x00 },
	{ 0x05ae, 0x00, 0x00 },
	{ 0x05af, 0x00, 0x00 },
	{ 0x05ac, 0x00, 0x00 },
	{ 0x05ad, 0x01, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x1c, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x12, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x06, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x14, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x18, 0x00 },
	{ 0x05b1, 0x19, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x14, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x40, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x38, 0x00 },
	{ 0x05b1, 0x29, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x68, 0x00 },
	{ 0x05b1, 0x41, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x08, 0x00 },
	{ 0x05b1, 0x88, 0x00 },
	{ 0x05b1, 0x51, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x94, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x01, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0x02, 0x00 },
	{ 0x05b1, 0xd9, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0x03, 0x00 },
	{ 0x05b1, 0xf8, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x04, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x9e, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x05, 0x00 },
	{ 0x05b1, 0x07, 0x00 },
	{ 0x05b1, 0xf0, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0c, 0x00 },
	{ 0x05b1, 0x0b, 0x00 },
	{ 0x05b1, 0x3d, 0x00 },
	{ 0x05b1, 0x00, 0x00 },
	{ 0x05b1, 0x0d, 0x00 },
	{ 0x05b1, 0x0f, 0x00 },
	{ 0x05b1, 0xc6, 0x00 },
	{ 0x05b1, 0x09, 0x00 },
	{ 0x05b1, 0x6d, 0x00 },
	{ 0x05ac, 0x01, 0x00 },
	{ 0x029f, 0xc4, 0x00 },
	{ 0x05a0, 0xc3, 0x00 },
	{ 0x02b0, 0x70, 0x00 },
	{ 0x0206, 0xc0, 0x00 },
	{ 0x02b3, 0x00, 0x00 },
	{ 0x02b4, 0x00, 0x00 },
	{ 0x0204, 0x04, 0x00 },
	{ 0x0205, 0x00, 0x00 },
	{ 0x0099, 0x00, 0x00 },
	{ 0x0351, 0x00, 0x00 },
	{ 0x0352, 0x06, 0x00 },
	{ 0x0353, 0x00, 0x00 },
	{ 0x0354, 0x08, 0x00 },
	{ 0x034c, 0x0c, 0x00 },
	{ 0x034d, 0xc0, 0x00 },
	{ 0x034e, 0x09, 0x00 },
	{ 0x034f, 0x90, 0x00 },
	{ 0x0108, 0x08, 0x00 },
	{ 0x0112, 0x0a, 0x00 },
	{ 0x0113, 0x0a, 0x00 },
	{ 0x0114, 0x01, 0x00 },
	{ 0x0181, 0x30, 0x00 },
	{ 0x0185, 0x01, 0x00 },
	{ 0x0188, 0x00, 0x00 },
	{ 0x0121, 0x0b, 0x00 },
	{ 0x0122, 0x0d, 0x00 },
	{ 0x0123, 0x2f, 0x00 },
	{ 0x0124, 0x01, 0x00 },
	{ 0x0125, 0x12, 0x00 },
	{ 0x0126, 0x0f, 0x00 },
	{ 0x0129, 0x0c, 0x00 },
	{ 0x012a, 0x13, 0x00 },
	{ 0x012b, 0x0f, 0x00 },
	{ 0x0a70, 0x11, 0x00 },
	{ 0x0313, 0x80, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0aff, 0x10, 0x00 },
	{ 0x0a70, 0x00, 0x00 },
	{ 0x00be, 0x01, 0x00 },
	{ 0x0317, 0x00, 0x00 },
	{ 0x0a67, 0x00, 0x00 },
	{ 0x0084, 0x10, 0x00 },
};

static struct imgsensor_i2c_reg_table dump_setting[] = {
	{ 0x0934, 0x00, IMGSENSOR_I2C_BYTE_DATA, IMGSENSOR_I2C_READ, 0 },
	{ 0x0340, 0x00, IMGSENSOR_I2C_BYTE_DATA, IMGSENSOR_I2C_READ, 0 },
	{ 0x0342, 0x00, IMGSENSOR_I2C_BYTE_DATA, IMGSENSOR_I2C_READ, 0 },
	{ 0x0102, 0x00, IMGSENSOR_I2C_BYTE_DATA, IMGSENSOR_I2C_READ, 0 },
};

static struct imgsensor_info_t imgsensor_info = {
	.sensor_id_reg = 0x03f0,
	.sensor_id = GC8054_BYD_SENSOR_ID, // defined in kd_imgsensor.h
	.checksum_value = 0x1b375588, // checksum for Camera Auto Test

	.pre = {
		.pclk = 100800000,
		.linelength = 2624,
		.framelength = 1266,
		.startx = 0,
		.starty = 0,
		.grabwindow_width = 1632,
		.grabwindow_height = 1224,
		.mipi_data_lp2hs_settle_dc = 85,
		.mipi_pixel_rate = 70080000,
		.max_framerate = 300,
	},
	.cap = {
		.pclk = 403200000,
		.linelength = 5248,
		.framelength = 2532,
		.startx = 0,
		.starty = 0,
		.grabwindow_width = 3264,
		.grabwindow_height = 2448,
		.mipi_data_lp2hs_settle_dc = 85,
		.mipi_pixel_rate = 264960000,
		.max_framerate = 300,
	},
	.normal_video = {
		.pclk = 403200000,
		.linelength = 5248,
		.framelength = 2532,
		.startx = 0,
		.starty = 0,
		.grabwindow_width = 3264,
		.grabwindow_height = 2448,
		.mipi_data_lp2hs_settle_dc = 85,
		.mipi_pixel_rate = 264960000,
		.max_framerate = 300,
	},
	.custom2 = {
		.pclk = 403200000,
		.linelength = 5248,
		.framelength = 2532,
		.startx = 0,
		.starty = 0,
		.grabwindow_width = 3264,
		.grabwindow_height = 2448,
		.mipi_data_lp2hs_settle_dc = 85,
		.mipi_pixel_rate = 264960000,
		.max_framerate = 300,
	},
	.init_setting = {
		.setting = init_setting,
		.size = IMGSENSOR_ARRAY_SIZE(init_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.pre_setting = {
		.setting = preview_setting,
		.size = IMGSENSOR_ARRAY_SIZE(preview_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 10,
	},
	.cap_setting = {
		.setting = capture_setting,
		.size = IMGSENSOR_ARRAY_SIZE(capture_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.normal_video_setting = {
		.setting = video_setting,
		.size = IMGSENSOR_ARRAY_SIZE(video_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.custom2_setting = {
		.setting = cust2_setting,
		.size = IMGSENSOR_ARRAY_SIZE(cust2_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.streamon_setting = {
		.setting = stream_on,
		.size = IMGSENSOR_ARRAY_SIZE(stream_on),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 10,
	},

	.streamoff_setting = {
		.setting = stream_off,
		.size = IMGSENSOR_ARRAY_SIZE(stream_off),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 10,
	},

	.dump_info = {
		.setting = dump_setting,
		.size = IMGSENSOR_ARRAY_SIZE(dump_setting),
	},

	.margin = 16, // sensor framelength & shutter margin
	.min_shutter = 4, // min shutter
	.max_frame_length = 0xfffe, // max framelength by sensor reg's limit
	.ae_shut_delay_frame = 0, // shutter delay frame for AE cycle
	.ae_sensor_gain_delay_frame = 0,// sensor gain delay frame for AE cycle
	.ae_ispGain_delay_frame = 2, // isp gain delay frame for AE cycle
	.ihdr_support = 0, // 1, support; 0,not support
	.ihdr_le_firstline = 0, // 1,le first ; 0, se first
	.sensor_mode_num = 7, // sizeof(imgsensor_winsize_info)
	.cap_delay_frame = 2, // enter capture delay frame num
	.pre_delay_frame = 2, // enter preview delay frame num
	.video_delay_frame = 2, // enter video delay frame num
	.hs_video_delay_frame = 2, // enter high speed video  delay frame num
	.slim_video_delay_frame = 2, // enter slim video delay frame num
	.custom2_delay_frame = 2, // face unlock sensor mode
	.isp_driving_current = ISP_DRIVING_6MA, // mclk driving current
	.sensor_interface_type = SENSOR_INTERFACE_TYPE_MIPI,
	.mipi_sensor_type = MIPI_OPHY_NCSI2,
	.mipi_settle_delay_mode = 0, // 0, AUTO; 1,MANNUAL
#if GC8054_MIRROR_FLIP_ENABLE
	.sensor_output_dataformat = SENSOR_OUTPUT_FORMAT_RAW_Gb,
#else
	.sensor_output_dataformat = SENSOR_OUTPUT_FORMAT_RAW_Gr,
#endif
	.mclk = 24, // mclk value, suggest 24 or 26 for 24Mhz or 26Mhz
	.mipi_lane_num = SENSOR_MIPI_2_LANE, // mipi lane num
	.i2c_addr_table = { 0x62, 0xff }, // write id addr, must end with 0xff
	.i2c_speed = 400, // i2c read/write speed
	.addr_type = IMGSENSOR_I2C_WORD_ADDR,
};

static struct imgsensor_t imgsensor = {
	.mirror = IMAGE_HV_MIRROR,
	.sensor_mode = IMGSENSOR_MODE_INIT,
	.shutter = 0x900,
	.gain = 0x40,
	.dummy_pixel = 0,
	.dummy_line = 0,
	.current_fps = 300,
	.autoflicker_en = KAL_FALSE,
	.test_pattern = KAL_FALSE,
	.current_scenario_id = MSDK_SCENARIO_ID_CAMERA_PREVIEW,
	.ihdr_en = 0,
	.i2c_write_id = 0x62,
};

/* Sensor output window information */
static struct SENSOR_WINSIZE_INFO_STRUCT imgsensor_winsize_info[] = {
	{ /* preview */
		.full_w = 3264,
		.full_h = 2448,
		.x0_offset = 0,
		.y0_offset = 0,
		.w0_size = 3264,
		.h0_size = 2448,
		.scale_w = 1632,
		.scale_h = 1224,
		.x1_offset = 0,
		.y1_offset = 0,
		.w1_size = 1632,
		.h1_size = 1224,
		.x2_tg_offset = 0,
		.y2_tg_offset = 0,
		.w2_tg_size = 1632,
		.h2_tg_size = 1224,
	}, { /* capture */
		.full_w = 3264,
		.full_h = 2448,
		.x0_offset = 0,
		.y0_offset = 0,
		.w0_size = 3264,
		.h0_size = 2448,
		.scale_w = 3264,
		.scale_h = 2448,
		.x1_offset = 0,
		.y1_offset = 0,
		.w1_size = 3264,
		.h1_size = 2448,
		.x2_tg_offset = 0,
		.y2_tg_offset = 0,
		.w2_tg_size = 3264,
		.h2_tg_size = 2448,
	}, { /* video */
		.full_w = 3264,
		.full_h = 2448,
		.x0_offset = 0,
		.y0_offset = 0,
		.w0_size = 3264,
		.h0_size = 2448,
		.scale_w = 3264,
		.scale_h = 2448,
		.x1_offset = 0,
		.y1_offset = 0,
		.w1_size = 3264,
		.h1_size = 2448,
		.x2_tg_offset = 0,
		.y2_tg_offset = 0,
		.w2_tg_size = 3264,
		.h2_tg_size = 2448,
	}, { /* hs_video */
		.full_w = 3264,
		.full_h = 2448,
		.x0_offset = 0,
		.y0_offset = 0,
		.w0_size = 3264,
		.h0_size = 2448,
		.scale_w = 3264,
		.scale_h = 2448,
		.x1_offset = 0,
		.y1_offset = 0,
		.w1_size = 3264,
		.h1_size = 2448,
		.x2_tg_offset = 0,
		.y2_tg_offset = 0,
		.w2_tg_size = 3264,
		.h2_tg_size = 2448,
	}, { /* sl_video */
		.full_w = 3264,
		.full_h = 2448,
		.x0_offset = 0,
		.y0_offset = 0,
		.w0_size = 3264,
		.h0_size = 2448,
		.scale_w = 3264,
		.scale_h = 2448,
		.x1_offset = 0,
		.y1_offset = 0,
		.w1_size = 3264,
		.h1_size = 2448,
		.x2_tg_offset = 0,
		.y2_tg_offset = 0,
		.w2_tg_size = 3264,
		.h2_tg_size = 2448,
	}, { /* custom1 reserved */
		.full_w = 3264,
		.full_h = 2448,
		.x0_offset = 0,
		.y0_offset = 0,
		.w0_size = 3264,
		.h0_size = 2448,
		.scale_w = 3264,
		.scale_h = 2448,
		.x1_offset = 0,
		.y1_offset = 0,
		.w1_size = 3264,
		.h1_size = 2448,
		.x2_tg_offset = 0,
		.y2_tg_offset = 0,
		.w2_tg_size = 3264,
		.h2_tg_size = 2448,
	}, { /* custom2 face unlocked */
		.full_w = 3264,
		.full_h = 2448,
		.x0_offset = 0,
		.y0_offset = 0,
		.w0_size = 3264,
		.h0_size = 2448,
		.scale_w = 3264,
		.scale_h = 2448,
		.x1_offset = 0,
		.y1_offset = 0,
		.w1_size = 3264,
		.h1_size = 2448,
		.x2_tg_offset = 0,
		.y2_tg_offset = 0,
		.w2_tg_size = 3264,
		.h2_tg_size = 2448,
	},
};
#endif

